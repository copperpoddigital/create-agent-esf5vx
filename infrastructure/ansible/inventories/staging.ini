# Ansible Inventory for Document Management and AI Chatbot System - Staging Environment
# This inventory defines the hosts and configuration for pre-production validation

# Staging environment hosts
[staging]
staging-app-server-1 ansible_host=10.0.5.10 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/staging-key.pem
staging-app-server-2 ansible_host=10.0.6.10 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/staging-key.pem

# Application servers for running the Document Management and AI Chatbot System
[app_servers]
staging-app-server-1
staging-app-server-2

# Database servers for PostgreSQL
[db_servers]
staging-db-primary ansible_host=10.0.7.10 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/staging-key.pem
staging-db-replica ansible_host=10.0.8.10 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/staging-key.pem

# Primary PostgreSQL database server
[primary_db]
staging-db-primary

# Replica PostgreSQL database server
[replica_db]
staging-db-replica

# Global variables
[all:vars]
ansible_python_interpreter=/usr/bin/python3
ansible_connection=ssh
environment=staging
deployment_environment=staging
aws_region=us-west-2
notification_email=staging-alerts@example.com
notification_slack_webhook=https://hooks.slack.com/services/TXXXXXXXX/BXXXXXXXX/XXXXXXXXXXXXXXXXXXXXXXXX
health_check_interval_seconds=30
health_check_timeout_seconds=5
health_check_retries=3
monitoring_enabled=True
alerting_enabled=True
ssl_enabled=True
ssl_cert_path=/etc/ssl/certs/docaichatbot-staging.crt
ssl_key_path=/etc/ssl/private/docaichatbot-staging.key

# Staging environment variables
[staging:vars]
env=staging
app_base_dir=/opt/document-management
backup_base_dir=/opt/document-management/backups
app_user=app
app_group=app
app_port=8000
git_branch=staging
db_host=staging-db-primary
db_port=5432
db_name=docaichatbot
db_user=dbadmin
setup_database=True
enable_monitoring=True
enable_backups=True
upload_to_s3=True
s3_backup_bucket=doc-ai-chatbot-backups-staging
keep_releases=5
run_migrations=True
force_rebuild=False
enable_notifications=True
stop_for_vector_backup=False
compress_backups=True
verify_backups=True
cleanup_old_backups=True
db_backup_retention_days=30
document_backup_retention_days=30
vector_backup_retention_days=14

# Application server variables
[app_servers:vars]
app_role=application
enable_vector_store=True
vector_memory_limit=8G
max_document_size_mb=10
max_concurrent_uploads=10
max_concurrent_queries=30
enable_rate_limiting=True
rate_limit_requests=75
rate_limit_period_seconds=60

# Database server variables
[db_servers:vars]
db_role=database
postgresql_version=14
postgresql_data_dir=/var/lib/postgresql/14/main
postgresql_max_connections=150
postgresql_shared_buffers=2GB
postgresql_effective_cache_size=6GB
postgresql_work_mem=12MB
postgresql_maintenance_work_mem=512MB
postgresql_backup_hour=2
postgresql_backup_minute=30
postgresql_archive_mode=on
postgresql_archive_command=cp %p /var/lib/postgresql/archives/%f

# Primary database server variables
[primary_db:vars]
postgresql_wal_level=replica
postgresql_max_wal_senders=5
postgresql_wal_keep_segments=32
postgresql_hot_standby=on
is_primary=True

# Replica database server variables
[replica_db:vars]
postgresql_hot_standby=on
is_primary=False
primary_host=staging-db-primary