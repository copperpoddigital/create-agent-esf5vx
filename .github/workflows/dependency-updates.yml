name: Dependency Updates

on:
  schedule:
    - cron: '0 0 * * 1'  # Run at midnight every Monday
  workflow_dispatch:  # Allow manual triggering
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'src/backend/pyproject.toml'
      - 'src/backend/poetry.lock'

jobs:
  update-python-dependencies:
    name: Check and update Python dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # actions/checkout version v3

      - name: Set up Python
        uses: actions/setup-python@v4  # actions/setup-python version v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Add Poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Check for updates
        id: check-updates
        run: |
          cd src/backend
          poetry update --dry-run > updates.txt
          if grep -q "Updating" updates.txt; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi

      - name: Update dependencies
        if: steps.check-updates.outputs.has_updates == 'true'
        run: cd src/backend && poetry update

      - name: Run tests with updated dependencies
        if: steps.check-updates.outputs.has_updates == 'true'
        run: cd src/backend && poetry run pytest

      - name: Create Pull Request
        if: steps.check-updates.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v5  # peter-evans/create-pull-request version v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(deps): update Python dependencies'
          title: 'Update Python dependencies'
          body: |
            This PR updates Python dependencies to their latest compatible versions.

            Updated files:
            - src/backend/poetry.lock

            All tests pass with the updated dependencies.
          branch: dependency-updates/python
          base: develop
          labels: dependencies,automated pr

  dependency-review:
    name: Review dependencies for vulnerabilities
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # actions/checkout version v3

      - name: Dependency Review
        uses: actions/dependency-review-action@v3  # actions/dependency-review-action version v3
        with:
          fail-on-severity: high
          deny-licenses: GPL-3.0, AGPL-3.0

  test-updated-dependencies:
    name: Test compatibility with updated dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # actions/checkout version v3

      - name: Set up Python
        uses: actions/setup-python@v4  # actions/setup-python version v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Add Poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: cd src/backend && poetry install --with dev

      - name: Run unit tests
        run: cd src/backend && poetry run pytest tests/unit

      - name: Run integration tests
        run: cd src/backend && poetry run pytest tests/integration
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          TESTING: 'True'

      - name: Run security checks
        run: cd src/backend && poetry run bandit -r app

  auto-approve-dependabot:
    name: Auto-approve Dependabot PRs if tests pass
    runs-on: ubuntu-latest
    needs: [test-updated-dependencies]
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.6.0  # dependabot/fetch-metadata version v1.6.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Approve patch and minor updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}